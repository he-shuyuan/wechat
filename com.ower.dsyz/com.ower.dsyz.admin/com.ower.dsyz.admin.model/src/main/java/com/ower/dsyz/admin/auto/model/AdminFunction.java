package com.ower.dsyz.admin.auto.model;

import java.io.Serializable;
import java.util.Date;

public class AdminFunction implements Serializable {
    /**
     * 
     * 表 : t_admin_function
     * 对应字段 : function_id
     */
    private String functionId;

    /**
     * 
     * 表 : t_admin_function
     * 对应字段 : bus_type_id
     */
    private String busTypeId;

    /**
     * 菜单按钮名称
     * 表 : t_admin_function
     * 对应字段 : name
     */
    private String name;

    /**
     * menu_xxx；button_xxx
     * 表 : t_admin_function
     * 对应字段 : code
     */
    private String code;

    /**
     * 可能的取值包括：功能分类、菜单、按钮、工作流程节点
     * 表 : t_admin_function
     * 对应字段 : function_type
     */
    private String functionType;

    /**
     * 菜单访问地址
     * 表 : t_admin_function
     * 对应字段 : url
     */
    private String url;

    /**
     * 上级菜单ID。根结点为0
     * 表 : t_admin_function
     * 对应字段 : parent_id
     */
    private String parentId;

    /**
     * 菜单显示时的排列次序，按照其值的大小进行排序，序号小的显示时排在前面，序号不必是连续的
     * 表 : t_admin_function
     * 对应字段 : sort_no
     */
    private Integer sortNo;

    /**
     * 菜单图标
     * 表 : t_admin_function
     * 对应字段 : image_url
     */
    private String imageUrl;

    /**
     * 是否相对路径
     * 表 : t_admin_function
     * 对应字段 : is_context_relative
     */
    private String isContextRelative;

    /**
     * 菜单路径所在框架名，_blank、_self、_parent、_top
     * 表 : t_admin_function
     * 对应字段 : target
     */
    private String target;

    /**
     * Y：是；N：否
     * 表 : t_admin_function
     * 对应字段 : is_valid
     */
    private String isValid;

    /**
     * 描述
     * 表 : t_admin_function
     * 对应字段 : remark
     */
    private String remark;

    /**
     * 创建人
     * 表 : t_admin_function
     * 对应字段 : create_user
     */
    private String createUser;

    /**
     * 创建日期
     * 表 : t_admin_function
     * 对应字段 : create_date
     */
    private Date createDate;

    /**
     * 修改人
     * 表 : t_admin_function
     * 对应字段 : update_user
     */
    private String updateUser;

    /**
     * 修改日期
     * 表 : t_admin_function
     * 对应字段 : update_date
     */
    private Date updateDate;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_admin_function
     *
     * @mbggenerated Tue Jul 24 16:13:10 CST 2018
     */
    private static final long serialVersionUID = 1L;

    /**
     * get method 
     *
     * @return t_admin_function.function_id：
     */
    public String getFunctionId() {
        return functionId;
    }

    /**
     * set method 
     *
     * @param functionId  
     */
    public void setFunctionId(String functionId) {
        this.functionId = functionId == null ? null : functionId.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.bus_type_id：
     */
    public String getBusTypeId() {
        return busTypeId;
    }

    /**
     * set method 
     *
     * @param busTypeId  
     */
    public void setBusTypeId(String busTypeId) {
        this.busTypeId = busTypeId == null ? null : busTypeId.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.name：菜单按钮名称
     */
    public String getName() {
        return name;
    }

    /**
     * set method 
     *
     * @param name  菜单按钮名称
     */
    public void setName(String name) {
        this.name = name == null ? null : name.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.code：menu_xxx；button_xxx
     */
    public String getCode() {
        return code;
    }

    /**
     * set method 
     *
     * @param code  menu_xxx；button_xxx
     */
    public void setCode(String code) {
        this.code = code == null ? null : code.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.function_type：可能的取值包括：功能分类、菜单、按钮、工作流程节点
     */
    public String getFunctionType() {
        return functionType;
    }

    /**
     * set method 
     *
     * @param functionType  可能的取值包括：功能分类、菜单、按钮、工作流程节点
     */
    public void setFunctionType(String functionType) {
        this.functionType = functionType == null ? null : functionType.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.url：菜单访问地址
     */
    public String getUrl() {
        return url;
    }

    /**
     * set method 
     *
     * @param url  菜单访问地址
     */
    public void setUrl(String url) {
        this.url = url == null ? null : url.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.parent_id：上级菜单ID。根结点为0
     */
    public String getParentId() {
        return parentId;
    }

    /**
     * set method 
     *
     * @param parentId  上级菜单ID。根结点为0
     */
    public void setParentId(String parentId) {
        this.parentId = parentId == null ? null : parentId.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.sort_no：菜单显示时的排列次序，按照其值的大小进行排序，序号小的显示时排在前面，序号不必是连续的
     */
    public Integer getSortNo() {
        return sortNo;
    }

    /**
     * set method 
     *
     * @param sortNo  菜单显示时的排列次序，按照其值的大小进行排序，序号小的显示时排在前面，序号不必是连续的
     */
    public void setSortNo(Integer sortNo) {
        this.sortNo = sortNo;
    }

    /**
     * get method 
     *
     * @return t_admin_function.image_url：菜单图标
     */
    public String getImageUrl() {
        return imageUrl;
    }

    /**
     * set method 
     *
     * @param imageUrl  菜单图标
     */
    public void setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl == null ? null : imageUrl.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.is_context_relative：是否相对路径
     */
    public String getIsContextRelative() {
        return isContextRelative;
    }

    /**
     * set method 
     *
     * @param isContextRelative  是否相对路径
     */
    public void setIsContextRelative(String isContextRelative) {
        this.isContextRelative = isContextRelative == null ? null : isContextRelative.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.target：菜单路径所在框架名，_blank、_self、_parent、_top
     */
    public String getTarget() {
        return target;
    }

    /**
     * set method 
     *
     * @param target  菜单路径所在框架名，_blank、_self、_parent、_top
     */
    public void setTarget(String target) {
        this.target = target == null ? null : target.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.is_valid：Y：是；N：否
     */
    public String getIsValid() {
        return isValid;
    }

    /**
     * set method 
     *
     * @param isValid  Y：是；N：否
     */
    public void setIsValid(String isValid) {
        this.isValid = isValid == null ? null : isValid.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.remark：描述
     */
    public String getRemark() {
        return remark;
    }

    /**
     * set method 
     *
     * @param remark  描述
     */
    public void setRemark(String remark) {
        this.remark = remark == null ? null : remark.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.create_user：创建人
     */
    public String getCreateUser() {
        return createUser;
    }

    /**
     * set method 
     *
     * @param createUser  创建人
     */
    public void setCreateUser(String createUser) {
        this.createUser = createUser == null ? null : createUser.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.create_date：创建日期
     */
    public Date getCreateDate() {
        return createDate;
    }

    /**
     * set method 
     *
     * @param createDate  创建日期
     */
    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    /**
     * get method 
     *
     * @return t_admin_function.update_user：修改人
     */
    public String getUpdateUser() {
        return updateUser;
    }

    /**
     * set method 
     *
     * @param updateUser  修改人
     */
    public void setUpdateUser(String updateUser) {
        this.updateUser = updateUser == null ? null : updateUser.trim();
    }

    /**
     * get method 
     *
     * @return t_admin_function.update_date：修改日期
     */
    public Date getUpdateDate() {
        return updateDate;
    }

    /**
     * set method 
     *
     * @param updateDate  修改日期
     */
    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }

    /**
     *
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", functionId=").append(functionId);
        sb.append(", busTypeId=").append(busTypeId);
        sb.append(", name=").append(name);
        sb.append(", code=").append(code);
        sb.append(", functionType=").append(functionType);
        sb.append(", url=").append(url);
        sb.append(", parentId=").append(parentId);
        sb.append(", sortNo=").append(sortNo);
        sb.append(", imageUrl=").append(imageUrl);
        sb.append(", isContextRelative=").append(isContextRelative);
        sb.append(", target=").append(target);
        sb.append(", isValid=").append(isValid);
        sb.append(", remark=").append(remark);
        sb.append(", createUser=").append(createUser);
        sb.append(", createDate=").append(createDate);
        sb.append(", updateUser=").append(updateUser);
        sb.append(", updateDate=").append(updateDate);
        sb.append("]");
        return sb.toString();
    }
}