spring.application.name=wechat
ower.application.channel=/dict/notify

eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/
server.port=${config.port:8620}
#禁用注册中心
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
#
spring.http.multipart.maxFileSize=10Mb
spring.http.multipart.maxRequestSize=20Mb


#数据库
spring.datasource.url=jdbc:mysql://localhost:3306/wechat
spring.datasource.username=root
spring.datasource.password=foresee
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#连接池的配置信息  
spring.datasource.initialSize=5
#最小空闲连接数
spring.datasource.minIdle=5
#最大并发连接数
spring.datasource.maxActive=20
#配置获取连接等待超时的时间
spring.datasource.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句。 
spring.datasource.validationQuery=select 1
spring.datasource.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.testOnReturn=false
#打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
#合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true


# Redis配置
spring.redis.host=10.10.0.76
spring.redis.port=6379
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=100
spring.redis.pool.max-wait=-1

spring.aop.proxy-target-class=true
# stomp消息代理
#stomp.broker.host=10.10.0.206
#stomp.broker.port=61613
#stomp.broker.username=admin
#stomp.broker.password=admin

#   配置次路径后，所有的资源访问路径都会加上/app前缀
#server.context-path=/lalala

